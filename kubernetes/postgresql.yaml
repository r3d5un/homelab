apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgresql
          image: postgres:16
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: postgresql-configmap
                  key: postgresql-db
                  optional: false
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgresql-secrets
                  key: postgresql-user
                  optional: false
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql-secrets
                  key: postgresql-password
                  optional: false
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
            - name: dshm
              mountPath: /dev/shmV
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: postgresql-pvc
        - name: dshm
          emptyDir:
            sizeLimit: 4096Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresql-pvc
spec:
  storageClassName: local-development
  accessModes: [ReadWriteOnce]
  resources: { requests: { storage: 50Gi } }
---
apiVersion: v1
kind: Secret
metadata:
  name: "postgresql-secrets"
type: Opaque
data:
  postgresql-user: cG9zdGdyZXM=
  postgresql-password: cG9zdGdyZXM=
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  labels:
    app: postgresql
spec:
  type: NodePort
  ports:
    - nodePort: 31432
      port: 5432
  selector:
    app: postgresql
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-configmap
  labels:
    app: postgresql
data:
  postgresql-db: postgres
